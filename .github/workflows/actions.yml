name: Salesforce Deployments

on:
  push:
    branches: 
    - main

jobs:
    deploy:
      runs-on: ubuntu-latest

      steps:
      
      # Checkout source code
        - name: Checkout source code
          uses: actions/checkout@v4
          with: 
            fetch-depth: 10  # Fetch the last 10 commits
        # fetch-depth: 0  # Fetch the entire history for accurate delta calculation

      # This sets the fetch depth to 10, ensuring that the workflow fetches at least the last two commits.
      # This allows git diff HEAD~1 to work correctly by ensuring HEAD~1 is available.
      
      # Install salesforce cli
        - name: Install salesforce cli
          run: |
            npm install sfdx-cli --global

      # Authenticate with Salesforce
        - name: Authenticate with Salesforce
          run: |
            echo ${{ secrets.SFDX_AUTH_URL }} > ./authfile.txt
            sfdx force:auth:sfdxurl:store -f ./authfile.txt --setalias target_poc -s

       # Install PMD
        - name: Install PMD
          run: |
            PMD_VERSION=`cat pmd/pmd-version.txt`
                wget https://github.com/pmd/pmd/releases/download/pmd_releases%2F$PMD_VERSION/pmd-bin-$PMD_VERSION.zip
                unzip pmd-bin-$PMD_VERSION.zip -d ~
                mv ~/pmd-bin-$PMD_VERSION ~/pmd
                ~/pmd/bin/run.sh pmd --version

      # Run PMD scan
        - name: 'Run PMD scan'
          run: ~/pmd/bin/run.sh pmd -d force-app -R pmd/ruleset.xml -f text

      # Upload PMD Report
        - name: Upload PMD Report
          uses: actions/upload-artifact@v4
          with:
            name: pmd-report
            path: pmd/pmd-report.txt

      # Install the sfdx-git-delta plugin     
        - name: Install the sfdx-git-delta plugin
          run: |
            echo 'y' | sfdx plugins:install sfdx-git-delta

       # Generate the package.xml for delta files     
        - name: Generate the package.xml for delta files
          run: |
            mkdir -p delta
            echo "Generating delta package.xml"
            sfdx sgd:source:delta --to "HEAD" --from "HEAD~3" --output "./delta" --ignore-whitespace -d -i .sgdignore
            ls -R delta  
            if [ -f delta/package/package.xml ]; then
              echo "--- package.xml generated with added and modified metadata ---"
              cat delta/package/package.xml
            else
              echo "No changes detected or package.xml not created"
            fi
    # ls -l delta/package - List contents of delta/package directory for debugging

    # Prepare destructive changes
        - name: Prepare destructive changes
          run: |
            if [ -f destructiveChanges.xml ]; then
              cp destructiveChanges.xml delta/destructiveChanges.xml
              cp package.xml delta/packages.xml
              ls -R delta          
            else
              echo "No Destructive changes detected"
            fi
          continue-on-error: true

    # Create deployment reports folder
        - name: Create deployment reports folder
          run: mkdir -p deploy_reports

    # Validate & Deploy Delta components to Salesforce    
        - name: Validate & Deploy Delta components to Salesforce
          run: |
            if [ -f delta/package/package.xml ]; then
              sfdx force:source:deploy -x delta/package/package.xml --checkonly > deploy_reports/checkonly_report.txt
              sfdx force:source:deploy -x delta/package/package.xml > deploy_reports/deployment_report.txt
              if [ -f delta/destructiveChanges ]; then
                sfdx force:source:deploy -d delta/destructiveChanges -w 10 --ignorewarnings > deploy_reports/deployment_report.txt
              fi
            else
              echo "No changes to deploy."
            fi
          continue-on-error: true

      #Artifact of delta and deployment report  
        - name: List deploy_reports directory
          run: ls -R deploy_reports

        - name: Upload deployment report
          uses: actions/upload-artifact@v4
          with:
            name: deployment-report
            path: deploy_reports/    

        - name: Upload delta folder
          uses: actions/upload-artifact@v4
          with:
            name: delta
            path: delta/